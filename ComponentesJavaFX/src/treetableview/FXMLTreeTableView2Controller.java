package treetableview;

import java.net.URL;
import java.util.ResourceBundle;

import javafx.beans.property.SimpleIntegerProperty;
import javafx.beans.property.SimpleStringProperty;
import javafx.beans.value.ObservableValue;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.TreeItem;
import javafx.scene.control.TreeTableColumn;
import javafx.scene.control.TreeTableColumn.CellDataFeatures;
import javafx.scene.control.TreeTableColumn.CellEditEvent;
import javafx.scene.control.TreeTableView;
import javafx.scene.control.cell.ChoiceBoxTreeTableCell;
import javafx.util.Callback;

public class FXMLTreeTableView2Controller implements Initializable {
	@FXML
	private TreeTableView<Person> tblView;
	@FXML
	private TreeTableColumn<Person, String> tc1;
	@FXML
	private TreeTableColumn<Person, String> tc2;
	@FXML
	private TreeTableColumn<Person, Number> tc3;

	TreeItem<Person> per1 = new TreeItem<>(new Person("Jose", "jp@gmail.com", 21));
	TreeItem<Person> per2 = new TreeItem<>(new Person("Ana", "ana@gmail.com", 33));
	TreeItem<Person> per3 = new TreeItem<>(new Person("Salete", "salete@gmail.com", 23));
	TreeItem<Person> per4 = new TreeItem<>(new Person("Aureliano", "aureliano@gmail.com", 55));

	TreeItem<Person> root = new TreeItem<>(new Person("name", "email", 0));

	// Event Listener on Button.onAction
	@FXML
	public void makeChange(ActionEvent event) {
		// TODO Autogenerated

	}

	@Override
	public void initialize(URL location, ResourceBundle resources) {
		root.getChildren().setAll(per1, per2, per3, per4);

		tc1.setCellValueFactory(
				new Callback<TreeTableColumn.CellDataFeatures<Person, String>, ObservableValue<String>>() {

					@Override
					public ObservableValue<String> call(CellDataFeatures<Person, String> param) {
						return param.getValue().getValue().getNameProperty();
					}
				});

		tc2.setCellValueFactory(
				new Callback<TreeTableColumn.CellDataFeatures<Person, String>, ObservableValue<String>>() {

					@Override
					public ObservableValue<String> call(CellDataFeatures<Person, String> param) {
						return param.getValue().getValue().getEmailProperty();
					}
				});
		
		tc3.setCellValueFactory(new Callback<TreeTableColumn.CellDataFeatures<Person,Number>, ObservableValue<Number>>() {
			
			@Override
			public ObservableValue<Number> call(CellDataFeatures<Person, Number> param) {
				// TODO Auto-generated method stub
				return param.getValue().getValue().getAgeProperty();
			}
		});
		
		
		ObservableList<String> list = FXCollections.observableArrayList();
		list.add("John");
		list.add("Grugumilo");
		list.add("Astolfo");
		list.add("Genuino");
		
		//tc1.setCellFactory(TextFieldTreeTableCell.forTreeTableColumn());
		tc1.setCellFactory(ChoiceBoxTreeTableCell.forTreeTableColumn(list));
		tc1.setOnEditCommit(new EventHandler<TreeTableColumn.CellEditEvent<Person,String>>() {
			
			@Override
			public void handle(CellEditEvent<Person, String> event) {
				// TODO Auto-generated method stub
				TreeItem<Person> currentEditingPerson=tblView.getTreeItem(event.getTreeTablePosition().getRow());
				currentEditingPerson.getValue().setNameProperty(event.getNewValue());
			}
		});

		tblView.setEditable(true);
		tblView.setRoot(root);
		tblView.setShowRoot(false);

	}

	class Person {
		SimpleStringProperty nameProperty;
		SimpleStringProperty emailProperty;
		SimpleIntegerProperty ageProperty;

		public Person(String name, String email, Integer age) {

			this.nameProperty = new SimpleStringProperty(name);
			this.emailProperty = new SimpleStringProperty(email);
			this.ageProperty = new SimpleIntegerProperty(age);
		}
		
		public void setNameProperty(String name) {
			this.nameProperty = new SimpleStringProperty(name);
		}

		public SimpleStringProperty getNameProperty() {
			return nameProperty;
		}

		public SimpleStringProperty getEmailProperty() {
			return emailProperty;
		}

		public SimpleIntegerProperty getAgeProperty() {
			return ageProperty;
		}

	}

}
